{"version":3,"sources":["lib/actions.js","store/users/actions.js","store/users/reducer.js","pages/Message/styles.js","pages/Message/index.jsx","store/messages/actions.js","store/messages/reducer.js","pages/Chat/styles.js","pages/Chat/index.jsx","pages/CreateUser/styles.js","pages/CreateUser/index.jsx","pages/AppWrapper/index.jsx","store/messages/saga.js","store/users/saga.js","store/sagas.js","store/index.js","pages/index.js","reportWebVitals.js","index.js"],"names":["SUFFIXES","defaultActionMaker","type","payload","asyncAction","base","actionCreator","pending","success","failure","createUserAction","initialState","usersSelector","state","users","useStyles","makeStyles","root","display","flexDirection","username","height","isMine","position","top","padding","color","fontWeight","fontStyle","container","justifyContent","alignItems","message","borderRadius","wordBreak","flex","maxWidth","backgroundColor","isLastMessage","content","left","undefined","right","bottom","width","zIndex","iconPlaceholder","alignSelf","Message","createdBy","isFirstMessage","id","useContext","UserIdContext","useSelector","classes","user","useMemo","find","className","Typography","variant","style","wordWrap","AccountCircle","fontSize","React","memo","postMessageAction","loadMessagesAction","messagesSelector","messages","theme","appBar","borderTop","boxSizing","margin","paddingBottom","scrollBehavior","breakpoints","up","form","button","marginLeft","Chat","dispatch","useDispatch","useState","setMessage","loaded","setLoaded","chatBottomRef","useRef","messagesRef","inputRef","scrollToBottom","current","scrollIntoView","useLayoutEffect","window","innerHeight","getBoundingClientRect","prevState","loadedMessages","slice","length","Button","fullWidth","onClick","loadedMessagesCount","ref","map","ix","timestamp","Toolbar","onSubmit","e","preventDefault","trim","Date","getTime","focus","noValidate","TextField","inputProps","autoFocus","placeholder","value","onChange","target","IconButton","data-testid","Send","wrapper","marginTop","getUsers","a","localforage","getItem","setItem","CreateUser","setId","setUsername","Math","max","required","label","disabled","size","createContext","App","createMuiTheme","ThemeProvider","Provider","loadMessages","postMessage","select","reduxMessaged","isEqual","put","messagesActions","push","takeEvery","createNewUser","concat","usersActions","fork","rootReducer","withReduxStateSync","combineReducers","action","config","blacklist","sagaMiddleware","createSagaMiddleware","middlewares","createStateSyncMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","initMessageListener","initStateWithPrevTab","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab702963.chunk.js","sourcesContent":["export const SUFFIXES = {\n  PENDING: 'PENDING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n};\n\nconst defaultActionMaker = (type, payload) => ({ type, payload });\n\nexport function asyncAction(base) {\n  const actionCreator = (payload) => defaultActionMaker(`${base}/${SUFFIXES.PENDING}`, payload);\n\n  actionCreator.type = base;\n  actionCreator.pending = `${base}/${SUFFIXES.PENDING}`;\n  actionCreator.success = `${base}/${SUFFIXES.SUCCESS}`;\n  actionCreator.failure = `${base}/${SUFFIXES.FAILURE}`;\n  return actionCreator;\n}\n\nexport function syncAction(base) {\n  const actionCreator = (payload) => defaultActionMaker(base, payload);\n\n  actionCreator.type = base;\n  return actionCreator;\n}\n","import { asyncAction } from 'lib/actions';\n\nexport const createUserAction = asyncAction('users/CREATE_USER');\n","import { createUserAction } from 'store/users/actions';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case createUserAction.success:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const usersSelector = (state) => state.users;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  username: ({ isMine }) => ({\n    display: 'flex',\n    height: '25px !important',\n    flexDirection: isMine ? 'row-reverse' : 'row',\n    position: 'relative',\n    top: 5,\n    '& p': {\n      padding: '0 .5rem',\n      color: '#41b3a3',\n      fontWeight: 'bold',\n      fontStyle: 'italic',\n    },\n  }),\n  container: ({ isMine }) => ({\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    flexDirection: isMine ? 'row' : 'row-reverse',\n  }),\n  message: ({ isMine, isLastMessage }) => ({\n    position: 'relative',\n    borderRadius: '.75rem',\n    padding: '.25rem .5rem',\n    wordBreak: 'break-word',\n    flex: '1 10px',\n    maxWidth: 'fit-content',\n    backgroundColor: isMine ? '#3f51b5' : '#c5cbe3',\n    color: '#fff',\n    '&:before': {\n      display: isLastMessage ? 'block' : 'none',\n      content: `''`,\n      position: 'absolute',\n      left: isMine ? undefined : 0,\n      right: isMine ? 0 : undefined,\n      bottom: 0,\n      width: '.75rem',\n      height: '.75rem',\n      zIndex: -1,\n      backgroundColor: isMine ? '#3f51b5' : '#c5cbe3',\n    },\n  }),\n  iconPlaceholder: {\n    alignSelf: 'flex-end',\n    flex: '0 35px',\n    width: 35,\n    height: 35,\n  },\n});\n","import React, { useContext, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\n\nimport { UserIdContext } from 'pages/AppWrapper';\nimport { usersSelector } from 'store/users/reducer';\n\nimport { useStyles } from './styles';\n\nconst Message = ({ message: { createdBy, message }, isFirstMessage, isLastMessage }) => {\n  const id = useContext(UserIdContext);\n  const users = useSelector(usersSelector);\n  const isMine = createdBy === id;\n  const classes = useStyles({ isMine, isLastMessage });\n\n  const user = useMemo(() => users.find(({ id }) => id === createdBy), [users]);\n\n  return (\n    <div className={classes.root}>\n      {isFirstMessage && (\n        <div className={classes.username}>\n          <div className={classes.iconPlaceholder} />\n          <Typography variant=\"body2\">{user && user.username}</Typography>\n        </div>\n      )}\n\n      <div className={classes.container}>\n        <div className={classes.message}>\n          <Typography style={{ wordWrap: 'break-all' }}>{message}</Typography>\n        </div>\n        <div className={classes.iconPlaceholder}>\n          {isLastMessage && <AccountCircle color={isMine ? 'primary' : 'secondary'} fontSize=\"large\" />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.shape({\n    createdBy: PropTypes.number.isRequired,\n    message: PropTypes.string.isRequired,\n    timestamp: PropTypes.number.isRequired,\n  }).isRequired,\n  isFirstMessage: PropTypes.bool.isRequired,\n  isLastMessage: PropTypes.bool.isRequired,\n};\n\nexport default React.memo(Message);\n","import { asyncAction } from 'lib/actions';\n\nexport const postMessageAction = asyncAction('messages/POST_MESSAGE');\nexport const loadMessagesAction = asyncAction('messages/LOAD_MESSAGES');\n","import { loadMessagesAction } from 'store/messages/actions';\n\nconst initialState = null;\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case loadMessagesAction.success:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const messagesSelector = (state) => state.messages;\n","import { makeStyles } from '@material-ui/core';\n\nconst MESSAGES_PADDING = 5;\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'relative',\n  },\n  appBar: {\n    borderTop: '1px solid rgba(0, 0, 0, .12)',\n    backgroundColor: '#fafafa',\n    position: 'fixed',\n    boxSizing: 'border-box',\n    width: '100%',\n    maxWidth: '450px',\n    bottom: 0,\n  },\n  messages: {\n    margin: '0 1rem',\n    paddingBottom: 56 + MESSAGES_PADDING,\n    scrollBehavior: 'smooth',\n    [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n      paddingBottom: 48 + MESSAGES_PADDING,\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingBottom: 64 + MESSAGES_PADDING,\n    },\n  },\n  form: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n  },\n  button: {\n    marginLeft: '.5rem',\n  },\n}));\n","import React, { useContext, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Toolbar, TextField, IconButton, Button } from '@material-ui/core';\nimport { Send } from '@material-ui/icons';\n\nimport { UserIdContext } from 'pages/AppWrapper';\nimport Message from 'pages/Message';\n\nimport { postMessageAction } from 'store/messages/actions';\nimport { messagesSelector } from 'store/messages/reducer';\n\nimport { useStyles } from './styles';\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState('');\n  const [loaded, setLoaded] = useState(-1);\n  const chatBottomRef = useRef(null);\n  const messagesRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const messages = useSelector(messagesSelector);\n  const id = useContext(UserIdContext);\n\n  const classes = useStyles();\n\n  const loadMore = () => {\n    setLoaded((prevState) => {\n      const loadedMessagesCount = prevState + 25;\n      return loadedMessages <= messages.length ? loadedMessagesCount : messages.length;\n    });\n  };\n\n  const scrollToBottom = () =>\n    chatBottomRef.current && chatBottomRef.current.scrollIntoView && chatBottomRef.current.scrollIntoView();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (message.trim()) {\n      dispatch(postMessageAction({ createdBy: id, message, timestamp: new Date().getTime() }));\n    }\n    scrollToBottom();\n    setMessage('');\n    inputRef.current.focus();\n  };\n\n  useLayoutEffect(() => {\n    if (messages) {\n      if (window.innerHeight - messagesRef.current.getBoundingClientRect().bottom >= -125) {\n        scrollToBottom();\n      }\n      setLoaded((prevState) => prevState + 1);\n    }\n  }, [messages]);\n\n  const loadedMessages = useMemo(() => (loaded > 0 ? (messages || []).slice(-loaded) : []), [messages, loaded]);\n\n  return (\n    <div className={classes.container}>\n      {messages && loaded < messages.length && (\n        <Button fullWidth type=\"button\" onClick={loadMore}>\n          Load more\n        </Button>\n      )}\n\n      <div className={classes.messages} ref={messagesRef}>\n        {loadedMessages.map((message, ix) => (\n          <Message\n            key={`by-${message.createdBy}-at-${message.timestamp}`}\n            message={message}\n            isLastMessage={loadedMessages[ix + 1] ? loadedMessages[ix + 1].createdBy !== message.createdBy : true}\n            isFirstMessage={loadedMessages[ix - 1] ? loadedMessages[ix - 1].createdBy !== message.createdBy : true}\n          />\n        ))}\n      </div>\n      <div ref={chatBottomRef} />\n\n      <Toolbar position=\"static\" className={classes.appBar}>\n        <form onSubmit={onSubmit} className={classes.form} noValidate>\n          <TextField\n            inputProps={{\n              'data-testid': 'message-input',\n            }}\n            autoFocus\n            inputRef={inputRef}\n            placeholder=\"Message\"\n            fullWidth\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <IconButton data-testid=\"message-submit\" type=\"submit\" className={classes.button}>\n            <Send />\n          </IconButton>\n        </form>\n      </Toolbar>\n    </div>\n  );\n};\n\nexport default Chat;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n  wrapper: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    marginTop: '.5rem',\n  },\n});\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport localforage from 'localforage';\nimport PropTypes from 'prop-types';\n\nimport { TextField, Button } from '@material-ui/core';\n\nimport { createUserAction } from 'store/users/actions';\n\nimport { useStyles } from './styles';\n\nconst getUsers = async () => {\n  const users = await localforage.getItem('users');\n  if (!users) {\n    await localforage.setItem('users', []);\n  }\n  return users || [];\n};\n\nconst CreateUser = ({ setId }) => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const classes = useStyles();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const users = await getUsers();\n    const id = Math.max(0, ...users.map(({ id }) => id)) + 1;\n    setId(id);\n    dispatch(createUserAction({ users, user: { username, id } }));\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <form onSubmit={onSubmit} className={classes.form}>\n        <TextField\n          required\n          inputProps={{\n            'data-testid': 'username-input',\n          }}\n          autoFocus\n          label=\"Username\"\n          variant=\"outlined\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Button\n          disabled={!username}\n          data-testid=\"username-submit\"\n          size=\"large\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          fullWidth\n          className={classes.button}\n        >\n          Enter chat\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nCreateUser.propTypes = {\n  setId: PropTypes.func,\n};\n\nexport default CreateUser;\n","import React, { createContext, useState } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\n\nimport Chat from 'pages/Chat';\nimport CreateUser from 'pages/CreateUser';\n\nexport const UserIdContext = createContext(null);\n\nconst App = () => {\n  const [id, setId] = useState(null);\n  const theme = createMuiTheme();\n  return (\n    <ThemeProvider theme={theme}>\n      <UserIdContext.Provider value={id}>{id ? <Chat /> : <CreateUser setId={setId} />}</UserIdContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { takeEvery, put, select } from 'redux-saga/effects';\nimport localforage from 'localforage';\nimport isEqual from 'lodash/isEqual';\n\nimport * as messagesActions from 'store/messages/actions';\nimport { messagesSelector } from 'store/messages/reducer';\n\nfunction* loadMessages() {\n  try {\n    const reduxMessaged = yield select(messagesSelector);\n    const messages = yield localforage.getItem('messages');\n    if (!messages) {\n      yield localforage.setItem('messages', []);\n    }\n\n    const isMessagesEqual = isEqual(messages || [], reduxMessaged);\n\n    if (!isMessagesEqual) {\n      yield put({\n        type: messagesActions.loadMessagesAction.success,\n        payload: messages || [],\n      });\n    }\n  } catch {\n    yield put({ type: messagesActions.loadMessagesAction.failure });\n  }\n}\n\nfunction* postMessage({ payload }) {\n  try {\n    const messages = (yield localforage.getItem('messages')) || [];\n    messages.push(payload);\n    yield localforage.setItem('messages', messages);\n    yield put({ type: messagesActions.postMessageAction.success, payload });\n    yield put(messagesActions.loadMessagesAction());\n  } catch {\n    yield put({ type: messagesActions.postMessageAction.failure });\n  }\n}\n\nexport default function* () {\n  yield takeEvery(messagesActions.postMessageAction.pending, postMessage);\n  yield takeEvery(messagesActions.loadMessagesAction.pending, loadMessages);\n}\n","import { takeEvery, put } from 'redux-saga/effects';\nimport localforage from 'localforage';\n\nimport * as usersActions from 'store/users/actions';\nimport * as messagesActions from 'store/messages/actions';\n\nfunction* createNewUser({ payload }) {\n  try {\n    const { user, users } = payload;\n    yield localforage.setItem('users', users.concat(user));\n    yield put({ type: usersActions.createUserAction.success, payload: users.concat(user) });\n    yield put({ type: messagesActions.loadMessagesAction.pending });\n  } catch {\n    yield put({ type: usersActions.createUserAction.failure });\n  }\n}\n\nexport default function* () {\n  yield takeEvery(usersActions.createUserAction.pending, createNewUser);\n}\n","import { fork } from 'redux-saga/effects';\n\nimport messages from './messages/saga';\nimport users from './users/saga';\n\nexport default function* () {\n  yield* [fork(messages), fork(users)];\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport {\n  createStateSyncMiddleware,\n  initMessageListener,\n  withReduxStateSync,\n  initStateWithPrevTab,\n} from 'redux-state-sync';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport users from './users/reducer';\nimport messages from './messages/reducer';\n\nimport rootSaga from './sagas';\nimport { loadMessagesAction, postMessageAction } from 'store/messages/actions';\nimport { createUserAction } from 'store/users/actions';\n\nconst rootReducer = withReduxStateSync(\n  combineReducers({\n    users,\n    messages,\n  }),\n);\n\nconst config = {\n  // these actions will not be triggered in other tabs\n  blacklist: [postMessageAction.pending, loadMessagesAction.pending, createUserAction.pending],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [createStateSyncMiddleware(config), sagaMiddleware];\n\nexport const store = createStore(rootReducer, {}, composeWithDevTools(applyMiddleware(...middlewares)));\n\nsagaMiddleware.run(rootSaga);\n\ninitMessageListener(store);\ninitStateWithPrevTab(store);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport AppWrapper from 'pages/AppWrapper';\n\nimport { store } from 'store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <AppWrapper />\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}